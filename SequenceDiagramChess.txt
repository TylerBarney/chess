actor Client
participant Server
participant RegistrationService
participant DataAccess
database db

group #navy Registration #white
Client -> Server: [POST] /user\n{username, password, email}
Server -> RegistrationService: register(username, password, email)
RegistrationService -> DataAccess: getUser(username)
DataAccess -> db: SELECT username from user
DataAccess --> RegistrationService: null
RegistrationService -> DataAccess: createUser(username, password)
DataAccess -> db: INSERT username, password, email INTO user
RegistrationService -> DataAccess: createAuth(username)
DataAccess -> db: INSERT username, authToken INTO auth
DataAccess --> RegistrationService: authToken
RegistrationService --> Server: authToken
Server --> Client: 200\n{authToken}
end

group #orange Login #white
Client -> Server: [POST] /session\n{username, password}
Server -> RegistrationService: login(username, password)
RegistrationService -> DataAccess: getUser(username)
DataAccess -> db: SELECT username from user
DataAccess --> RegistrationService: null
RegistrationService -> DataAccess: createAuth(username)
DataAccess -> db: INSERT username, authToken INTO auth
DataAccess --> RegistrationService: username, authToken
RegistrationService --> Server: username, authToken
Server --> Client: 200\n{username, authToken}
end

group #green Logout #white
Client -> Server: [DELETE] /session\nauthToken
Server -> RegistrationService: logout(authToken)
RegistrationService -> DataAccess: getAuthToken(authToken)
DataAccess -> db: SELECT authToken from auth
DataAccess --> RegistrationService: null
RegistrationService -> DataAccess: removeAuthToken(authToken)
DataAccess -> db: REMOVE authToken FROM auth
DataAccess --> Client: 200
end

group #red List Games #white
Client -> Server: [GET] /game\nauthToken
Server -> RegistrationService: listGames(authToken)
RegistrationService -> DataAccess: getAuthToken(authToken)
DataAccess -> db: SELECT authToken from auth
DataAccess --> RegistrationService: null
RegistrationService -> DataAccess: listGames()
db --> DataAccess: READ games: [{gameID, whiteUserName, \nblackUsername, gameName}] FROM game
DataAccess --> RegistrationService: {games: [{gameID, whiteUserName, \nblackUsername, gameName}]}
RegistrationService --> Server: {games: [{gameID, whiteUserName, \nblackUsername, gameName}]}
Server --> Client: 200\n{games: [{gameID, whiteUserName, \nblackUsername, gameName}]}
end

group #purple Create Game #white
Client -> Server: [POST] /game\nauthToken\n{gameName}
Server -> RegistrationService: createGame(gameName, authToken)
RegistrationService -> DataAccess: getAuthToken(authToken)
DataAccess -> db: SELECT authToken from auth
DataAccess --> RegistrationService: null
RegistrationService -> DataAccess: createGame(gameName)
DataAccess -> db: INSERT gameName INTO game
DataAccess --> RegistrationService: gameID
RegistrationService --> Server: gameID
Server --> Client: 200\n{gameID}
end

group #yellow Join Game #black
Client -> Server: [PUT] /game\nauthToken\n{ClientColor, gameID}
Server -> RegistrationService: joinGame(ClientColor, gameID, authToken)
RegistrationService -> DataAccess: getAuthToken(authToken)
DataAccess -> db: SELECT authToken from auth
DataAccess --> RegistrationService: null
RegistrationService -> DataAccess: getUserName(authToken)
DataAccess -> db: READ userName FROM game
DataAccess --> RegistrationService: userName
RegistrationService -> DataAccess: joinGame(gameID, ClientColor, userName)
DataAccess -> db: INSERT gameID, ClientColor, userName INTO game
DataAccess --> Client: 200
end

group #gray Clear application #white
Client -> Server: [DELETE] /db
Server -> RegistrationService: clear()
RegistrationService -> DataAccess: clear()
DataAccess -> db: REMOVE auths FROM auth
DataAccess -> db: REMOVE users FROM user
DataAccess -> db: REMOVE games FROM games
DataAccess --> Client: 200
end
